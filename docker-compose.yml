version: "3"
services:
  web:
    image: abiosoft/caddy
    container_name: web
    hostname: web
    volumes:
      - "./Caddyfile:/etc/Caddyfile"
      - "./web:/web"
      - "./nginx/keys:/etc/caddy/ssl"
    working_dir: "/web"
    expose:
      - "8000"
      - "4343"
    ports:
      - "80:8000"
      - "4343:4343"

  server1:
    image: golang:alpine
    command: sh -c "apk add --update make git && make setup && make run"
    container_name: server1
    hostname: server1
    working_dir: "/src"
    environment:
      - INSTANCE=server1
    volumes:
      - "$PWD/server:/src"
    expose:
      - "5000"

  server2:
    image: golang:alpine
    command: sh -c "apk add --update make git && make setup && make run"
    container_name: server2
    hostname: server2
    working_dir: "/src"
    environment:
      - INSTANCE=server2
    volumes:
      - "$PWD/server:/src"
    expose:
      - "5000"

#  envoy:
#    image: envoyproxy/envoy
#    container_name: envoy
#    hostname: envoy
#    command: envoy -c /etc/envoy.yaml
#    volumes:
#      - "./envoy.yaml:/etc/envoy.yaml"
#      - "./nginx/keys:/etc/envoy/ssl"
#    expose:
#      - "4443"
#    ports:
#      - "9901:9901"
#      - "4443:4443"
#      - "4445:4445"
#    depends_on:
#      - server1
#      - server2
#      - web

  nginx:
    image: nginx
    container_name: nginx
    hostname: nginx
    volumes:
      - "./nginx/common:/etc/nginx/common"
      - "./nginx/conf.d:/etc/nginx/conf.d"
      - "./nginx/keys:/ssl"
      - "./web:/usr/share/nginx/html"
    ports:
      - "443:443"
    depends_on:
      - server1
      - server2

